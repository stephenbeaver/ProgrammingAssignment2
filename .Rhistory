samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
set.seed(007300)                 # make sure to change the seed
library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
n <- 60
samp <- sample_n(ames, n)
# type your code for the Exercise here, and Knit
ggplot(data = samp, aes(x = area)) +
geom_histogram(binwidth = 250)
samp %>%
summarise(mu = mean(area), sam_med = median(area),
sigma = sd(area), sam_iqr = IQR(area),
sam_min = min(area), sam_max = max(area),
sam_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
sam_q3 = quantile(area, 0.75))
#the dist for the sample is skewed slightly right.  Mean area of homes is 1400 sqft.
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
View(ci)
View(ci)
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
View(ci)
View(ci)
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
View(ci_data)
View(ci_data)
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Question 5 here, and Knit
qnorm(.99)
# type your code for the Question 5 here, and Knit
qnorm(.995)
#My anwser: 2.326348
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci <- ci %>%
mutate(capture_mu = ifelse(lower99 < params$mu & upper99 > params$mu, "yes", "no"))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower99 < params$mu & upper99 > params$mu, "yes", "no"))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower99 < params$mu & upper99 > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
# type your code for the Exercise here, and Knit
z_star_99 <- qnorm(0.995)
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower99 = mean(area) - z_star_99 * (sd(area) / sqrt(n)),
upper99 = mean(area) + z_star_99 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower99 < params$mu & upper99 > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower99, ci$upper99),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
qt(0.025, df=21)
pt(0.87, df=199)
1-0.81
.19*2
pnorm(.2)
pnorm(-.2)
qnorm(.8)
qt(.5, df=17)
pt(0.5, df=17)
pt(0.5, df=17, lower.tail = FALSE)
qt(0.05, df=24)
pt(2.485, df=25, lower.tail = FALSE)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
data(nc)
view(nc)
view(nc)
View(nc)
str(nc)
summary(nc$gained)
# type your code for the Question 3 here, and Knit
bps1 <<-ggplot(data=nc, aes(y=weight, x=habit, fill=habit ))
bps1
# type your code for the Question 3 here, and Knit
bps1 <<-ggplot(data=nc, aes(y=weight, x=habit, fill=habit ))
bps1 + geom_boxplot()
bps1
# type your code for the Question 3 here, and Knit
bps1 <<-ggplot(data=nc, aes(y=weight, x=habit, fill=habit ))
bps1 + geom_boxplot()
# type your code for the Question 3 here, and Knit
bps1 <<-ggplot(data=nc, aes(y=weight, x=habit, fill=habit ))
bps1
#bps1 + geom_boxplot()
# type your code for the Question 3 here, and Knit
bps1 <<-ggplot(data=nc, aes(y=weight, x=habit, fill=habit ))
bps1 <- bps1 + geom_boxplot()
bps1
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = N())
nc %>%
group_by(habit) %>%
summarise(mean_weight = n())
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
# type your code for the Question 5 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
method = "theoretical", order = c("smoker","nonsmoker"))
# type your code for Question 6 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", conf_level = 0.99,
method = "theoretical")
# type your code for Question 6 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "weeks", type = "ci", conf_level = 0.99,
method = "theoretical")
# type your code for Question 6 here, and Knit
inference(y = weeks, x = habit, data = nc, statistic = "mean", type = "ci", conf_level = 0.99,
method = "theoretical")
# type your code for Question 6 here, and Knit
inference(y = weeks, data = nc, statistic = "mean", type = "ci", conf_level = 0.99,
method = "theoretical")
# type your code for the Exercise here, and Knit
inference(y = weeks, data = nc, statistic = "mean", type = "ci", conf_level = 0.9,
method = "theoretical")
# type your code for the Exercise here, and Knit
bps2 <<-ggplot(data=nc, aes(y=gained, x=mature, fill=habit ))
bps2 <- bps1 + geom_boxplot()
bps2
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(gained))
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(gained))
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(weight))
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(gained))
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(weeks))
# type your code for Question 7 here, and Knit
nc %>%
group_by(habit) %>%
summarise(mean_gained_weight = mean(gained))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=fage, x=mature, fill=habit ))
bps3 <- bps1 + geom_boxplot()
bps3
bps1
bps3
# type your code for the Exercise here, and Knit
bps2 <<-ggplot(data=nc, aes(y=gained, x=mature, fill=habit ))
bps2 <- bps2 + geom_boxplot()
bps2
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=fage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
# type your code for the Exercise here, and Knit
bps2 <<-ggplot(data=nc, aes(y=gained, x=mature, fill=habit ))
bps2 <- bps2 + geom_boxplot()
bps2
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=fage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(fage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=fage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
summary(nc$mage)
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>%
group_by(mature) %>%
summary(nc$mage)
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>%
group_by(mature) %>%
summarise(nc$mage)
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>% group_by (mature) %>% filter (!is.na(fage)) %>%
summarise (min= min(fage), max=max(fage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>% group_by (mature) %>% filter (!is.na(mage)) %>%
summarise (min= min(mage), max=max(mage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>% group_by (mature) %>% filter (!is.na(mage)) %>%
summarise (min= min(mage), max=max(mage))
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>% group_by (mature) %>% filter (!is.na(mage)) %>%
summarise (min= min(mage), max=max(mage))
ggplot (data=nc, aes(x= mature, y= fage)) + geom_boxplot()
# type your code for Question 7 here, and Knit
bps3 <<-ggplot(data=nc, aes(y=mage, x=mature, fill=habit ))
bps3 <- bps3 + geom_boxplot()
bps3
nc %>%
group_by(mature) %>%
summarise(female_age = mean(mage))
nc %>% group_by (mature) %>% filter (!is.na(mage)) %>%
summarise (min= min(mage), max=max(mage))
ggplot (data=nc, aes(x= mature, y= mage)) + geom_boxplot()
install.packages('swirl')
packageVersion('swirl')
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z, 555, z)
c
z*2+100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.file()
list.files()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <-getwd()
dir.create("testdir")
setwd("testdir/")
file.create('mytest.R')
dir()
file.exists()
file.exists('mytest.R')
file.info('mytest.R')
args(file.rename)
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.r')
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.r")
file.path("mytest3.R")
agrs(file.path)
args(file.path)
file.path("folder1", "folder2")
?dir.create
file.path
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
?file.edit
?file.remove
dir()
file.remove("testdir/")
file.remove("testdir")
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10 lenght=30)
my_seq <- seq(5,10, lenght=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with =my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char)
paste(my_char, collapse = " ")
c(my_char, "Stephen")
my_name <- c(my_char, "Stephen")
my_name
paste(my_name, collapse = " " )
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x x 3
x *3
y <- rnorm(1000)
knitr::opts_chunk$set(echo = TRUE)
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
[3000]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <-c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
names(vect)
vect2 <-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
names(vect2)
identical(vect, vect2)
vect['bar']
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
my_vector
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data 1:20, nrow=4, ncol=5, byrow = FALSE, dinames = NULL)
my_matrix2 <- matrix(data = 1:20, nrow=4, ncol=5, byrow = FALSE, dinames = NULL)
my_matrix2 <- matrix(data = 1:20, nrow=4, ncol=5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames()
colnames(my_data) <- cnames
my_data
setwd("~/Coursera/Data Science Specialization/R Progamming/ProgrammingAssignment2")
00 {
})
source(cachematrix.R)
source('~/Coursera/Data Science Specialization/R Progamming/ProgrammingAssignment2/cachematrix.R')
